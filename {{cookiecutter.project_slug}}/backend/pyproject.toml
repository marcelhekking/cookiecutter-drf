[project]
name = "{{cookiecutter.project_slug}}"
description = "{{cookiecutter.description}}"
version = "0.1.0"
authors = [{ name = "{{cookiecutter.author_first_name}}", email = "{{cookiecutter.author_email}}" }]
dependencies = [
    "djangorestframework >=3.15.1",
    "psycopg[binary]>=3.2.6",
    "ctrl-z>=1.5.1",
    "sentry-sdk>=2.24.1",
    "pytest==8.3.5",
    "pytest-django>=4.10.0",
    "factory-boy>=3.3.3",
    "python-environ>=0.4.54",
    "gunicorn>=23.0.0",
    "celery[redis]>=5.5.0",
    "django-celery-beat>=2.7.0",
    "django-celery-results>=2.5.1",
    "drf-spectacular>=0.28.0",
]
requires-python = ">=3.13"
readme = "README.md"
license = { text = "MIT" }

[tool.uv]
dev-dependencies = [
    "debugpy>=1.8.9",
    "django-debug-toolbar>=4.4.6",
    "mypy>=1.15.0",
    "myst-parser>=4.0.1",
    "ruff>=0.9.10",
    "sphinx>=8.2.3",
]

[tool.sync-pre-commit-lock]
automaticall-install-hooks = true
disable-sync-from-lock = false
ignore = []
pre-commit-config-file = ".pre-commit-config.yaml"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{cookiecutter.project_slug}}.settings.develop"
testpaths = "tests/"
django_find_project = false
addopts = "--color=yes --reuse-db --nomigrations --disable-warnings"

[tool.ruff]
src = ["src", "tests"]
target-version = "py313"
exclude = ["migrations"]
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "DJ", # flake8-django, for django project only!
    "B",  # flake8-bugbear
    # "ANN", # flake8-annotations
    "Q",   # flake8-quotes
    "PTH", # flake8-pathlib
]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["{{cookiecutter.project_slug}}"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
exclude = "migrations"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"
